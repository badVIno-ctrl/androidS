package com.example.myapplication;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.appcompat.app.AlertDialog;
import androidx.preference.Preference;
import androidx.preference.PreferenceFragmentCompat;
import androidx.preference.SwitchPreference;

public class SettingsFragment extends PreferenceFragmentCompat implements SharedPreferences.OnSharedPreferenceChangeListener {

    @Override
    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
        setPreferencesFromResource(R.xml.preferences, rootKey);
    }

    @Override
    public void onResume() {
        super.onResume();
        getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    public void onPause() {
        super.onPause();
        getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);
    }

    @Override
    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
        if ("enable_humor".equals(key)) {
            boolean isChecked = sharedPreferences.getBoolean("enable_humor", true);
            SwitchPreference humorSwitch = findPreference("enable_humor");
            if (humorSwitch != null) {
                humorSwitch.setChecked(isChecked);
            }
        }
    }

    @Override
    public boolean onPreferenceTreeClick(Preference preference) {
        if ("request_history".equals(preference.getKey())) {
            Intent intent = new Intent(getContext(), ChatActivity.class);
            startActivity(intent);
            return true;
        }
        return super.onPreferenceTreeClick(preference);
    }

    private void showRequestHistoryDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        LayoutInflater inflater = requireActivity().getLayoutInflater();
        View dialogView = inflater.inflate(R.layout.dialog_history_layout, null);
        builder.setView(dialogView);

        LinearLayout chatContainer = dialogView.findViewById(R.id.chat_container);
        Button clearHistoryButton = dialogView.findViewById(R.id.clear_history_button);
        EditText messageInput = dialogView.findViewById(R.id.message_input);
        Button sendButton = dialogView.findViewById(R.id.send_button);

        DialogueHistory dialogueHistory = MistralAIService.getInstance(getContext()).getDialogueHistory();

        for (DialogueHistory.DialoguePair pair : dialogueHistory.getHistory()) {
            addChatMessage(chatContainer, "Пользователь: " + pair.getUserMessage(), true);
            addChatMessage(chatContainer, "Среда: " + pair.getAssistantResponse(), false);
        }

        clearHistoryButton.setOnClickListener(v -> {
            dialogueHistory.clearHistory();
            chatContainer.removeAllViews();
        });

        sendButton.setOnClickListener(v -> {
            String userMessage = messageInput.getText().toString().trim();
            if (!userMessage.isEmpty()) {
                addChatMessage(chatContainer, "Пользователь: " + userMessage, true);
                messageInput.setText("");

                // Обработка сообщения пользователя
                handleUserMessage(userMessage, chatContainer);
            }
        });

        builder.setTitle("История запросов")
                .setPositiveButton("Закрыть", null)
                .show();
    }

    private void addChatMessage(LinearLayout container, String message, boolean isUser) {
        TextView textView = new TextView(getContext());
        textView.setText(message);
        textView.setPadding(16, 8, 16, 8);
        if (isUser) {
            textView.setBackgroundResource(R.drawable.chat_bubble_user);
            textView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
            ((LinearLayout.LayoutParams) textView.getLayoutParams()).gravity = Gravity.END;
        } else {
            textView.setBackgroundResource(R.drawable.chat_bubble_assistant);
            textView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
            ((LinearLayout.LayoutParams) textView.getLayoutParams()).gravity = Gravity.START;
        }
        container.addView(textView);
    }

    private void handleUserMessage(String userMessage, LinearLayout chatContainer) {
        // Обработка сообщения пользователя
        SpeechProcessor.processCommand(getContext(), userMessage, chatContainer);
    }
}
